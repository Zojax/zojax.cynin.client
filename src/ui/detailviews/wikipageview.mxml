<?xml version="1.0" encoding="utf-8"?>
<!--
###############################################################################
#cyn.in is an open source Collaborative Knowledge Management Appliance that 
#enables teams to seamlessly work together on files, documents and content in 
#a secure central environment.
#
#cyn.in v2 an open source appliance is distributed under the GPL v3 license 
#along with commercial support options.
#
#cyn.in is a Cynapse Invention.
#
#Copyright (C) 2008 Cynapse India Pvt. Ltd.
#
#This program is free software: you can redistribute it and/or modify it under
#the terms of the GNU General Public License as published by the Free Software 
#Foundation, either version 3 of the License, or any later version and observe 
#the Additional Terms applicable to this program and must display appropriate 
#legal notices. In accordance with Section 7(b) of the GNU General Public 
#License version 3, these Appropriate Legal Notices must retain the display of 
#the "Powered by cyn.in" AND "A Cynapse Invention" logos. You should have 
#received a copy of the detailed Additional Terms License with this program.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of 
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
#Public License for more details.
#
#You should have received a copy of the GNU General Public License along with 
#this program.  If not, see <http://www.gnu.org/licenses/>.
#
#You can contact Cynapse at support@cynapse.com with any problems with cyn.in. 
#For any queries regarding the licensing, please send your mails to 
# legal@cynapse.com
#
#You can also contact Cynapse at:
#802, Building No. 1,
#Dheeraj Sagar, Malad(W)
#Mumbai-400064, India
###############################################################################
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"  
	horizontalScrollPolicy="off" verticalScrollPolicy="off" remove="handleRemove(event)"
	 xmlns:flexlib="flexlib.containers.*"
	 creationComplete="Created()"
	>
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.ChangeWatcher;
			import model.utils.Utils;
			import model.logger.Logger;
			import model.types.WikiPage;
			import model.updates.UpdateItem;
			import model.updates.LoadingEvent;
			[Bindable] public var _wikipage:WikiPage = null;

			private function Created():void
			{
				ChangeWatcher.watch(_wikipage, "bodyhtml", handleBodyChanged);
				if (_wikipage !=null)
				{
					if (_wikipage.bodyhtml != null && _wikipage.bodyhtml != "")
					{
						htmlWikiPageBody.htmlText = Utils.CookHTML(_wikipage.bodyhtml);
					}
				}
			}
			private function handleBodyChanged(event:Event):void
			{
				if (_wikipage !=null)
				{
					if (_wikipage.bodyhtml != null && _wikipage.bodyhtml != "")
					{
						htmlWikiPageBody.htmlText = Utils.CookHTML(_wikipage.bodyhtml);
					}
				}
			}

			private function inited(event:Event):void
			{
				htmlWikiPageBody.htmlLoader.navigateInSystemBrowser = true;
				htmlWikiPageBody.htmlLoader.useCache = true;
//				htmlWikiPageBody.htmlLoader.width = htmlWikiPageBody.width;
				dispatchEvent(new LoadingEvent(LoadingEvent.LOADED_DETAIL_VIEW));
			}
			
			
			private function handleRemove(event:Event):void
			{
				Logger.instance.log("Wiki page remove",Logger.SEVERITY_NORMAL);
			}
			private function htmlFocusIn(event:FocusEvent):void
			{
				setFocus();
				Logger.instance.log("FocusIn: Blog Entry HTML Focused",Logger.SEVERITY_NORMAL);
			}
			private function htmlFocusOut(event:FocusEvent):void
			{
				Logger.instance.log("FocusOut: Blog Entry HTML Focused",Logger.SEVERITY_NORMAL);
			}
			
		]]>
	</mx:Script>
	<mx:Canvas id="cnvHtml" bottom="0" left="10" top="0" right="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:HTML  id="htmlWikiPageBody"  horizontalScrollPolicy="auto" verticalScrollPolicy="auto" 
		htmlRender="inited(event)"
		focusIn="htmlFocusIn(event)" focusOut="htmlFocusOut(event)"  
		left="0" top="0" width="{cnvHtml.width - 10}" height="{cnvHtml.height}"/>
	</mx:Canvas>
	
</mx:Canvas>
